C51 COMPILER V9.60.7.0   LAB_10                                                            04/10/2024 15:53:23 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LAB_10
OBJECT MODULE PLACED IN .\Objects\Lab_10.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Lab_10.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\La
                    -b_10.lst) TABS(2) OBJECT(.\Objects\Lab_10.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          //Filter Coefficients: [-0.0051643  -0.02288252  0.09675565  0.43129117  0.43129117  0.09675565
   4          // -0.02288252 -0.0051643 ]
   5          bit tx_complete = 0;
   6          bit rx_complete = 0;
   7          int sample_arr[]={0,0,0,0,0,0,0,0};
   8          double filter_arr[]= {0.00875474, 0.04794887, 0.16402439, 0.27927199, 0.27927199, 0.16402439,
   9           0.04794887, 0.00875474};
  10          
  11          void msdelay(unsigned int time)
  12          {
  13   1        int i,j;
  14   1        for(i=0;i<time;i++)
  15   1        {
  16   2          for(j=0;j<382;j++);
  17   2        }
  18   1      }
  19          
  20          void uart_init(void)
  21          {
  22   1        TMOD=0x20;        
  23   1        TH1=0xF3;         
  24   1        SCON=0x50;        
  25   1        TCON=0x40;       
  26   1        ES=1;            
  27   1        EA=1;           
  28   1      }
  29            
  30          void transmit_char(unsigned char ch)
  31          {
  32   1        SBUF=ch;        
  33   1        while(!tx_complete);      
  34   1        tx_complete = 0;     
  35   1      }
  36          
  37          void transmit_string(unsigned char *s)
  38          {
  39   1        while(*s != 0)
  40   1        {
  41   2          transmit_char(*s++);
  42   2        }
  43   1      }
  44            
  45          unsigned char receive_char(void)
  46          {
  47   1        unsigned char ch = 0;
  48   1        while(!rx_complete);        
  49   1        rx_complete = 0;
  50   1        ch = SBUF;          
  51   1        return ch;          
  52   1      }
  53            
  54          void serial_ISR(void) interrupt 4
C51 COMPILER V9.60.7.0   LAB_10                                                            04/10/2024 15:53:23 PAGE 2   

  55          {
  56   1        if(TI==1)     
  57   1        {
  58   2          TI = 0;     
  59   2          tx_complete = 1;  
  60   2        }
  61   1        else if(RI==1)      
  62   1        {
  63   2          RI = 0;     
  64   2          rx_complete = 1;
  65   2        }
  66   1      }
  67          
  68          void main(void)
  69          {
  70   1        unsigned char data_recv[5] = {0,0,0,0,'\0'};
  71   1        int sample_val;
  72   1        int sample_val_doub;
  73   1        unsigned char data_send[5] = {0,0,0,0,'\0'};
  74   1        int count=6;
  75   1        uart_init();
  76   1        //transmit_string("UART Started\r\n");
  77   1        
  78   1        while (1)
  79   1        {
  80   2          //receiving sample value from PC
  81   2          //since each sample is a 4 digit number, the digits are stored in a character array of length 4  
  82   2          data_recv[0] = receive_char();    
  83   2          data_recv[1] = receive_char();
  84   2          data_recv[2] = receive_char(); 
  85   2          data_recv[3] = receive_char();
  86   2          data_recv[4] = '\0';
  87   2      
  88   2          //converting character array to its equivalent integer value
  89   2          sample_val = (data_recv[0]-48)*1000 + (data_recv[1]-48)*100 + (data_recv[2]-48)*10 + (data_recv[3]-48);
  90   2          
  91   2          //doubling the obtained integer value (you need to implement filtering here...)
  92   2          while(count>=0){
  93   3            sample_arr[count+1] = sample_arr[count];
  94   3            count--;
  95   3          }
  96   2          count=0;
  97   2          sample_arr[0]=sample_val;
  98   2          
  99   2          sample_val_doub = 0;
 100   2          while(count<8){
 101   3            sample_val_doub=sample_val_doub + sample_arr[count] * filter_arr[count];
 102   3            count++;
 103   3          }
 104   2          count=6;
 105   2          sample_val_doub = (int)sample_val_doub;
 106   2          //converting integer value back to 4 character array (i.e string)
 107   2          data_send[0] = 48 + (sample_val_doub/1000);
 108   2          data_send[1] = 48 + (sample_val_doub%1000/100);
 109   2          data_send[2] = 48 + (sample_val_doub%100/10);
 110   2          data_send[3] = 48 + (sample_val_doub%10);
 111   2          
 112   2          //transmitting output back to PC
 113   2          transmit_string(data_send);
 114   2          transmit_string("\r\n");
 115   2        }
 116   1      }
C51 COMPILER V9.60.7.0   LAB_10                                                            04/10/2024 15:53:23 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    520    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
