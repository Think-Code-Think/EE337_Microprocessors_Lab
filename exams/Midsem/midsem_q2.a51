ORG 0H
LJMP MAIN //E char I:60h = 02h,04h,01h,01h,00h,0FEh,0FFh,03h,04h
ORG 100H
MAIN:
LCALL DETERMINANT ; DETERMINANT WILL BE STORED AT 69H
MOV A , 69H
JZ SINGULAR
LCALL COFACTOR
LCALL INVERSE
HERE: SJMP HERE

MULT_SUBT:
MOV A , R3
MOV B , R4
MUL AB
MOV R5 , A
MOV A , R1
MOV B , R2
MUL AB
CLR C
SUBB A , R5
MOV R5 , A
RET

DETERMINANT:
MOV R0 , 60H
MOV R1 , 64H
MOV R2 , 68H
MOV R3 , 65H
MOV R4 , 67H
LCALL MULT_SUBT
MOV A , R5
MOV B , R0
MUL AB
MOV 57H  , A

MOV R0 , 61H
MOV R1 , 63H
MOV R2 , 68H
MOV R3 , 65H
MOV R4 , 66H
LCALL MULT_SUBT
MOV A , R5
MOV B , R0
MUL AB
MOV 58H  , A

MOV R0 , 62H
MOV R1 , 63H
MOV R2 , 67H
MOV R3 , 64H
MOV R4 , 66H
LCALL MULT_SUBT
MOV A , R5
MOV B , R0
MUL AB
MOV 59H  , A

MOV A , 57H
ADD A , 59H
CLR C
SUBB A , 58H
MOV 69H , A ; BUT THIS IS NOT MOD VALUE
RET

SINGULAR:
PUSH 00H
MOV R0 , #70H
SINGULAR_LOOP:MOV @R0 , #0FFH
              INC R0 
			  CJNE R0 , #79H , SINGULAR_LOOP
POP 00H
JMP HERE

COFACTOR:
MOV R1 , 64H
MOV R2 , 68H
MOV R3 , 65H
MOV R4 , 67H
LCALL MULT_SUBT
MOV 70H , R5

MOV R1 , 65H
MOV R2 , 66H
MOV R3 , 63H
MOV R4 , 68H
LCALL MULT_SUBT
MOV 71H , R5

MOV R1 , 63H
MOV R2 , 67H
MOV R3 , 64H
MOV R4 , 66H
LCALL MULT_SUBT
MOV 72H , R5

MOV R1 , 62H
MOV R2 , 67H
MOV R3 , 61H
MOV R4 , 68H
LCALL MULT_SUBT
MOV 73H , R5

MOV R1 , 60H
MOV R2 , 68H
MOV R3 , 62H
MOV R4 , 66H
LCALL MULT_SUBT
MOV 74H , R5

MOV R1 , 61H
MOV R2 , 66H
MOV R3 , 60H
MOV R4 , 67H
LCALL MULT_SUBT
MOV 75H , R5

MOV R1 , 61H
MOV R2 , 65H
MOV R3 , 62H
MOV R4 , 64H
LCALL MULT_SUBT
MOV 76H , R5

MOV R1 , 62H
MOV R2 , 63H
MOV R3 , 60H
MOV R4 , 65H
LCALL MULT_SUBT
MOV 77H , R5

MOV R1 , 60H
MOV R2 , 64H
MOV R3 , 61H
MOV R4 , 63H
LCALL MULT_SUBT
MOV 78H , R5

RET

INVERSE:

MOV A , 71H
MOV B , 73H
MOV 73H , A
MOV 71H , B

MOV A , 72H
MOV B , 76H
MOV 76H , A
MOV 72H , B

MOV A , 75H
MOV B , 77H
MOV 77H , A
MOV 75H , B

MOV R0 , #70H
INVERSE_LOOP:MOV A , @R0
             MOV R2 , A
			 CLR C
			 SUBB A , #80H
			 JNC TWO_CMPL
        	 MOV A , R2
     		 MOV B , 69H
			 DIV AB
			 MOV @R0 , A
			 INC R0
			 CJNE R0 , #79H , INVERSE_LOOP

RET		 
TWO_CMPL:
			MOV A , R2
			CPL A
			ADD A , #01H
			MOV R2 , A
			MOV A , R2
     		MOV B , 69H
			DIV AB
			CPL A
			ADD A , #01H
			MOV @R0 , A
			INC R0
			CJNE R0 , #79H , INVERSE_LOOP	 
RET		 

END