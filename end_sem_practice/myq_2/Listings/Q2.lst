C51 COMPILER V9.60.7.0   Q2                                                                04/06/2024 01:56:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE Q2
OBJECT MODULE PLACED IN .\Objects\Q2.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Q2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Q2.lst
                    -) TABS(2) OBJECT(.\Objects\Q2.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"        // Header file with LCD interfacing functions
*** WARNING C235 IN LINE 98 OF lcd.h: parameter 1: different types
   3          #include "serial.h" // Header file with UART interfacing functions
   4          
   5          int quantity[5] = {0,8,6,4,4};
   6          int quantity_max[5] = {0,8,6,4,4};
   7          // Main function
   8          void main(void)
   9          {
  10   1        unsigned char state=0;
  11   1        unsigned char index_char;
  12   1        int index;
  13   1        unsigned char quant_char;
  14   1        int quant;
  15   1        unsigned char ch;
  16   1        // Call initialization functions
  17   1        lcd_init();
  18   1        uart_init();
  19   1      
  20   1        // These strings will be printed in terminal software
  21   1        
  22   1        while(1)
  23   1        {
  24   2            // Receive a character
  25   2            // ch = receive_char();
  26   2            // Decide which test function to run based on character sent
  27   2            // Displays the string on the terminal software
  28   2            switch(state)
  29   2            {
  30   3              case 'I':
  31   3              case 'i':
  32   3                transmit_string("Enter micro-controller to be borrowed: \r\n");
  33   3                index_char = receive_char();
  34   3                index = index_char - 48;
  35   3                transmit_string("Enter Quantity: \r\n");
  36   3                quant_char = receive_char();
  37   3                quant = quant_char - 48;
  38   3                if(quant > quantity[index])
  39   3                  {
  40   4                  transmit_string("Requested micro-controller not available...\r\n");
  41   4                  }
  42   3                  else
  43   3                  {
  44   4                  transmit_string("Requested micro-controller allocated!\r\n");
  45   4                  quantity[index] = quantity[index] - quant;
  46   4                  }
  47   3                state = 0;
  48   3                break;
  49   3              
  50   3              case 'R':
  51   3              case 'r':
  52   3                transmit_string("Enter micro-controller to be returned: \r\n");
  53   3                index_char = receive_char();
C51 COMPILER V9.60.7.0   Q2                                                                04/06/2024 01:56:13 PAGE 2   

  54   3                index = index_char - 48;
  55   3                if(quantity[index] == quantity_max[index])
  56   3                {
  57   4                transmit_string("You can’t return what you don’t have...\r\n");
  58   4                state = 0;
  59   4                break;
  60   4                }
  61   3                else
  62   3                {
  63   4                transmit_string("Enter Quantity: \r\n");
  64   4                quant_char = receive_char();
  65   4                quant = quant_char - 48;
  66   4                if(quant + quantity[index] > quantity_max[index])
  67   4                  {
  68   5                  transmit_string("Returned micro-controller out of bounds...\r\n");
  69   5                  }
  70   4                  else
  71   4                  {
  72   5                  transmit_string("Returned micro-controller received!\r\n");
  73   5                  quantity[index] = quantity[index] + quant;
  74   5                  }
  75   4                state = 0;
  76   4                break;
  77   4                }
  78   3                  
  79   3              default:
  80   3                transmit_string("Micro-controllers available: 8051-8 TIVA-6 AT328-4 STM32-4.\r\n");
  81   3                transmit_string("Micro-controllers available: 8051-");
  82   3                ch = quantity[0]+48;
  83   3                transmit_char(ch);
  84   3                transmit_string(" TIVA-");
  85   3                ch = quantity[1]+48;
  86   3                transmit_char(ch);
  87   3                transmit_string(" AT328-");
  88   3                ch = quantity[2]+48;
  89   3                transmit_char(ch);
  90   3                transmit_string(" STM32-");
  91   3                ch = quantity[3]+48;
  92   3                transmit_char(ch);
  93   3                transmit_string(".\r\n");
  94   3                transmit_string("Press I for Issue and R for Return\r\n");
  95   3                ch = receive_char();
  96   3                break;
  97   3            }
  98   2            msdelay(100);
  99   2        }
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    844    ----
   CONSTANT SIZE    =    475    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
